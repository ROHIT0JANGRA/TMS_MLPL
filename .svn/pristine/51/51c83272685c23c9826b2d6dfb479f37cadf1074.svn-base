using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Mvc;

namespace CodeLock.Models
{
    public class DeliveryBill: BaseModel
    {
        public DeliveryBill()
        {
            this.BillNo = "";
            this.Details = new List<CustomerBillDetail>();
            this.CustomerBillSupplementryDetail = new List<CodeLock.Models.CustomerBillSupplementryDetail>();
        }

        public long BillId { get; set; }

        [Display(Name = "Bill No")]
        public string BillNo { get; set; }

        [Display(Name = "Manual Bill No")]
        [Remote("IsManualBillNoAvailable", "CustomerBill", AdditionalFields = "BillId,_BillIdToken", ErrorMessage = "Manual Bill No already exists.", HttpMethod = "POST")]
        public string ManualBillNo { get; set; }

        [Display(Name = "Bill Date")]
        [Required(ErrorMessage = "Please select Bill Date and Time")]
        public DateTime BillDate { get; set; }

        [Required(ErrorMessage = "Please enter Bill Address")]
        [Display(Name = "Bill Address")]
        public string BillingAddress { get; set; }

        [Required(ErrorMessage = "Please select Bill Due Date and Time")]
        [Display(Name = "Due Date")]
        public DateTime DueDate { get; set; }

        [Display(Name = "Generation Location")]
        public short GenerationLocationId { get; set; }

        [Display(Name = "Generation Location")]
        public string GenerationLocationCode { get; set; }

        [Display(Name = "Generated By")]
        public string GenerationUserName { get; set; }

        public short GenerationUserId { get; set; }

        public short GenerationStateId { get; set; }

        [Display(Name = "Bill Generation State")]
        public string GenerationState { get; set; }

        [Required(ErrorMessage = "Please select Bill Generation City")]
        public int GenerationCityId { get; set; }

        [Display(Name = "Bill Generation City")]
        public string GenerationCity { get; set; }

        public short? SubmissionUserId { get; set; }

        public short? SubmissionLocationId { get; set; }

        [Display(Name = "Submission Location")]
        public string SubmissionLocationCode { get; set; }

        public DateTime? SubmissionDate { get; set; }

        public TimeSpan? SubmissionTime { get; set; }

        public DateTime? SubmissionDateTime { get; set; }

        public short SubmissionStateId { get; set; }

        [Display(Name = "Bill Submission State")]
        public string SubmissionState { get; set; }

        [Required(ErrorMessage = "Please select Bill Submission City")]
        public int SubmissionCityId { get; set; }

        [Display(Name = "Bill Submission City")]
        public string SubmissionCity { get; set; }

        [Display(Name = "Collection Date")]
        [Required(ErrorMessage = "Please select Bill Collection Date and Time")]
        public DateTime? CollectionDate { get; set; }

        public short CollectionLocationId { get; set; }

        [Display(Name = "Collection Location")]
        public string CollectionLocationCode { get; set; }

        public short CollectionUserId { get; set; }

        [Required(ErrorMessage = "Please Select Paybas")]
        [Display(Name = "Paybas")]
        public byte PaybasId { get; set; }

        public string Paybas { get; set; }

        public byte TransportModeId { get; set; }

        public short CustomerId { get; set; }

        [Required(ErrorMessage = "Please enter Customer")]
        [Display(Name = "Customer")]
        public string CustomerCode { get; set; }

        public string CustomerName { get; set; }

        public string CustomerAddress { get; set; }

        public string CustomerPhone { get; set; }

        public string CustomerEmail { get; set; }

        [Display(Name = "GSTIN No")]
        [Required(ErrorMessage = "Please enter GSTIN No")]
        public string CustomerGstStateGstTinNo { get; set; }

        public long CustomerGstId { get; set; }

        [Display(Name = "Customer GST State")]
        [Required(ErrorMessage = "Please select Customer GST State")]
        public short CustomerGstStateId { get; set; }

        [Display(Name = "Customer GSTIN No")]
        public string CustomerGstInNo { get; set; }

        public long DocketId { get; set; }

        public string DocketSuffix { get; set; }

        [Display(Name = "Docket Status")]
        public string DocketStatusId { get; set; }

        [Display(Name = "PO No")]
        public string PONo { get; set; }

        public short BillStatus { get; set; }

        public short LocationId { get; set; }

        public string FinYear { get; set; }

        public bool IsFinalize { get; set; }

        public short? FinalizeBy { get; set; }

        public DateTime? FinalizeDate { get; set; }

        public bool IsCancelled { get; set; }

        public DateTime? CancelledDate { get; set; }

        public string CancelledReason { get; set; }

        public byte PrimaryBillingTypeId { get; set; }

        public string BillType { get; set; }

        [Display(Name = "GSTIN No")]
        public string CompanyGstStateGstTinNo { get; set; }

        public long CompanyGstId { get; set; }

        [Display(Name = "Transporter GST State")]
        [Required(ErrorMessage = "Please select Transporter GST State")]
        public short CompanyGstStateId { get; set; }

        [Display(Name = "From Date")]
        public DateTime FromDate { get; set; }

        [Display(Name = "To Date")]
        public DateTime ToDate { get; set; }

        [Display(Name = "Total Amount")]
        public Decimal TotalAmount { get; set; }

        [Display(Name = "Bill Amount")]
        public Decimal BillAmount { get; set; }

        [Display(Name = "Pending Amount")]
        public Decimal PendingAmount { get; set; }

        [Display(Name = "Service Tax")]
        public byte ServiceTax { get; set; }

        [Display(Name = "Transaction Category")]
        [Required(ErrorMessage = "Please select Transaction Category")]
        public byte GstServiceTypeId { get; set; }

        [Display(Name = "Service Type")]
        public string ServiceType { get; set; }

        [Display(Name = "Inter State")]
        public string InterState { get; set; }

        [Display(Name = "SAC Category")]
        public string SacName { get; set; }

        public byte SacId { get; set; }

        [Display(Name = "GST Rate")]
        public Decimal GstRate { get; set; }

        [Display(Name = "ITC")]
        public string Itc { get; set; }

        [Display(Name = "Transporter GSTIN No")]
        public string TransporterGstInNo { get; set; }

        [Required(ErrorMessage = "Please select Transaction Type")]
        [Display(Name = "Transaction Type")]
        public byte TransactionTypeId { get; set; }

        public Decimal SubTotal { get; set; }

        [Display(Name = "SGST")]
        public Decimal Sgst { get; set; }

        [Display(Name = "UGST")]
        public Decimal Ugst { get; set; }

        [Display(Name = "CGST")]
        public Decimal Cgst { get; set; }

        [Display(Name = "IGST")]
        public Decimal Igst { get; set; }

        [Display(Name = "GST Total")]
        public Decimal GstTotal { get; set; }

        public Decimal TaxTotal { get; set; }

        [Display(Name = "Service Type")]
        public long ServiceTypeId { get; set; }

        [Display(Name = "FTL Type")]
        public long FtlTypeId { get; set; }

        public string BillFinalizationLocationCode { get; set; }

        public bool IsFinalized { get; set; }

        [Display(Name = "Manifest No")]
        public string ManifestId { get; set; }

        [Display(Name = "THC No")]
        public string THCNo { get; set; }
        public List<CustomerBillDetail> Details { get; set; }

        public List<CodeLock.Models.CustomerBillSupplementryDetail> CustomerBillSupplementryDetail { get; set; }
    }
}