@model CodeLock.Models.Stock
@using Secure_Coding.MvcSecurityExtensions;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="dvWizard">
    <div class="panel-body">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "j-forms", @id = "j-forms" }))
        {
            @Html.AntiForgeryToken()
            <div class="tab-content">
                <div class="tab-pane">
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductCode, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.ProductCode, new { @class = "form-control", @id = "txtProductCode" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="page-separator">OR</div>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BinName, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.BinName, new { @class = "form-control", @id = "txtBinName" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane">
                    <div class="row">
                        <div class="col-sm-12">
                            <div>
                                <table id="dtWarehouseStockDetail"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        SetPageLoad('Warehouse Stock', 'Report', '');
        txtProductCode = $('#txtProductCode');
        txtBinName = $('#txtBinName');
        InitWizard('dvWizard', [
       { StepName: 'Criteria', StepFunction: GetStockDetail },
       { StepName: 'Document List' }
        ], '');
    });

    function GetStockDetail() {
        var requestData = { productCode: txtProductCode.val(), location: txtBinName.val() };
        AjaxRequestWithPostAndJson('@Url.Action("GetStockDetail")', JSON.stringify(requestData), OnStockDetailsSuccess, ErrorFunction, false);
        return false;
    }

    function OnStockDetailsSuccess(responseData) {
        dtWarehouseStockDetail = LoadDataTable('dtWarehouseStockDetail', true, true, true, null, null, [],
                [
                    { title: 'Product', data: "ProductCode" },
                { title: 'Location', data: "BinName" },
                { title: 'Available Quantity', data: "AvailableQuantity" },
                { title: 'Under Pick Quantity', data: "UnderPickQuantity" },
                { title: 'Total Quantity', data: "TotalQuantity" }
                ]);
        dtWarehouseStockDetail.fnClearTable()
        if (responseData.length == 0) {
            isStepValid = false;
            ShowMessage('No Record Found');
            return false;
        }
        else {
            if (responseData.length > 0) {
                $.each(responseData, function (i, item) {
                    item.AvailableQuantity = '<input type="text" value=' + item.AvailableQuantity.toFixed(3) + ' class="form-control textlabel numeric2" />';
                    item.UnderPickQuantity = '<input type="text" value=' + item.UnderPickQuantity.toFixed(3) + ' class="form-control textlabel numeric2" />';
                    item.TotalQuantity = '<input type="text" value=' + item.TotalQuantity.toFixed(3) + ' class="form-control textlabel numeric2" />';
                });
                dtWarehouseStockDetail.dtAddData(responseData);
            }
        }
    }
</script>

