@using CodeLock.Models
@model GatePass
@using Secure_Coding.MvcSecurityExtensions;
@{
    ViewBag.Title = "GatePassIn";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    baseUrl = '@Url.Action("","GatePass")';
</script>
<div id="dvWizard">
    <div class="panel-body">
        @using (Html.BeginForm("GatePassIn", "GatePass", FormMethod.Post, new { @class = "j-forms", @id = "j-forms" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.GatepassInId)
            @Html.HiddenFor(m => m.AsnId)

            <div class="tab-content">
                <div class="tab-pane">
                    <div class="row">
                        <div class="col-sm-3">
                            @Html.Label("Gate Pass In Date", new { @class = "label" })
                            <div id="drGatepassFromDateTime"></div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SupplierType, new { @class = "label" })
                                <div class="select">
                                    @Html.DropDownListFor(model => model.SupplierType, new List<SelectListItem>
                                                                        {
                                                                            new SelectListItem{ Text="Customer", Value = "1" },
                                                                            new SelectListItem{ Text="Supplier", Value = "2" },
                                                                            new SelectListItem{ Text="Warehouse", Value = "3" },
                                                                         }, new { @class = "form-control", @id = "ddlSupplierType" })
                                    <i></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.SupplierType)
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SupplierCode, new { @class = "label", @id = "lblSupplierCode" })
                                <div class="input">
                                    @Html.HiddenFor(model => model.SupplierId, new { @id = "hdnSupplierId" })
                                    @Html.TextBoxFor(model => model.SupplierCode, null, new { @class = "form-control", @id = "txtSupplierCode" })
                                </div>
                                @Html.ValidationMessageFor(model => model.SupplierCode)
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                @Html.Label(" ", " ", new { @class = "label" })
                                <div class="clearfix">
                                </div>
                                @Html.Label("lblSupplierName", " ", new { @class = "label-bold", @id = "lblSupplierName" })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.AsnNo, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.AsnNo, new { @class = "form-control", @id = "txtAsnNo" })
                                </div>
                                @Html.ValidationMessageFor(model => model.AsnNo)
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.InvoiceNo, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.InvoiceNo, new { @class = "form-control", @id = "txtInvoiceNo" })
                                </div>
                                @Html.ValidationMessageFor(model => model.InvoiceNo)
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PurchaseOrderNo, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.PurchaseOrderNo, new { @class = "form-control", @id = "txtPONo" })
                                </div>
                                @Html.ValidationMessageFor(model => model.PurchaseOrderNo)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane">
                    <div class="row">
                        <div class="col-sm-12 table-responsive">
                            <div>
                                <table id="dtGatePassInDetail"></table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane">
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.GatepassInNo, new { @class = "label" })
                                <div class="system-label">
                                    @Html.LabelFor(m => m.GatepassInNo, "<System Generated>")
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SupplierType, new { @class = "label" })
                                <div class="clearfix">
                                    @Html.LabelFor(m => m.SupplierType, " ", new { @id = "txtSupplierType", @class = "label-bold" })
                                    @*@Html.TextBoxFor(model => model.SupplierType, " ", new { @class = "form-control textlabel label-bold", @id = "txtSupplierType" })*@
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TransporterName, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.TransporterName, new { @class = "form-control", @maxlength = "15" })
                                </div>
                                @Html.ValidationMessageFor(model => model.TransporterName)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.VehicleNumber, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.VehicleNumber, new { @class = "form-control", @maxlength = "15" })
                                </div>
                                @Html.ValidationMessageFor(model => model.VehicleNumber)
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DriverName, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.DriverName, new { @class = "form-control", @maxlength = "15" })
                                </div>
                                @Html.ValidationMessageFor(model => model.DriverName)
                            </div>
                        </div>
                        @*<div class="col-sm-4">

                            @Html.Label("Vehicle In Date", new { @class = "label" })
                            <div id="drVehicleFromDateTime"></div>
                        </div>*@
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.Partial("DateTimePicker", new DateTimePicker() { DefaultDate = Model.VehicleInDateTime.ConvertToDateTime(), FieldName = "VehicleInDateTime", FieldCaption = DataAnnotationHelper.GetDisplayName(Model, m => m.VehicleInDateTime), IsDateOnly = false, IsRequired = true, AllowFutureDate = false, AllowPastDate = false, MinDate = DateTime.Now.Date, MaxDate = DateTime.Now.Date.AddDays(1) })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DriverMobileNo, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.DriverMobileNo, new { @class = "form-control", @maxlength = "15" })
                                </div>
                                @Html.ValidationMessageFor(model => model.DriverMobileNo)
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.VehicleSealNo, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.VehicleSealNo, new { @class = "form-control", @maxlength = "15" })
                                </div>
                                @Html.ValidationMessageFor(model => model.VehicleSealNo)
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DockNo, new { @class = "label" })
                                <div class="input">
                                    @Html.TextBoxFor(model => model.DockNo, new { @class = "form-control", @maxlength = "15" })
                                </div>
                                @Html.ValidationMessageFor(model => model.DockNo)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.LoginUserId, new { @class = "label" })
                                @Html.HiddenFor(model => model.LoginUserId, new { @Value = @SessionUtility.LoginUserId })
                                @Html.LabelFor(model => model.UserName, @SessionUtility.LoginUserName, new { @class = "label-bold" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div>
                                <table id="dtSkuList"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script>
    var dtGatePassInDetail;
    var asnList = [];
    var selectedAsnId;
    $(document).ready(function () {
        SetPageLoad('Gate Pass', 'In', '', '', '');
        InitWizard('dvWizard', [
        { StepName: 'Criteria', StepFunction: GetGatePassInList },
        { StepName: 'Document List', StepFunction: ValidateStep2 },
        { StepName: 'Generate GRN' }
        ], 'Generate Gate Pass');

        $('#txtGatepassInDateTime').readOnly(true);
        lblSupplierCode = $('#lblSupplierCode');
        txtSupplierCode = $('#txtSupplierCode');
        txtSupplierType = $('#txtSupplierType');
        hdnSupplierId = $('#hdnSupplierId');
        ddlSupplierType = $('#ddlSupplierType');
        lblSupplierName = $('#lblSupplierName');
        txtPONo = $('#txtPONo');
        txtAsnNo = $('#txtAsnNo');
        txtInvoiceNo = $('#txtInvoiceNo');
        rdGatepassInId = $('#rdGatepassInId');
        AsnId = $('#AsnId');
        ddlSupplierType.change(OnSupplierTypeChange);
        OnSupplierTypeChange();
        txtSupplierCode.blur(CheckValidSupplier);
        drGatepassFromDateTime = InitDateRange('drGatepassFromDateTime ', DateRange.LastWeek);
        drVehicleFromDateTime = InitDateRange('drVehicleFromDateTime ', DateRange.LastWeek);

    });

    var ValidateStep2 = function () {
        if (selectedAsnId == 0) {
            isStepValid = false;
            ShowMessage('Please select ASN');
            return false;
        }
        else
            GetSkuDetails();
    };

    function OnSupplierTypeChange() {
        $('#txtSupplierType').val('');
        if (ddlSupplierType.val() == 1) {
            CustomerAutoComplete(txtSupplierCode.Id, hdnSupplierId.Id);
            lblSupplierCode.text("Customer");
            AddRequired(txtSupplierCode, "Please enter Customer");
        }
        else if (ddlSupplierType.val() == 2) {
            SupplierAutoComplete(txtSupplierCode.Id, hdnSupplierId.Id);
            lblSupplierCode.text("Supplier");
            AddRequired(txtSupplierCode, "Please enter Supplier");
        }
        else if (ddlSupplierType.val() == 3) {
            WarehouseAutoComplete(txtSupplierCode.Id, hdnSupplierId.Id);
            lblSupplierCode.text("Warehouse");
            AddRequired(txtSupplierCode, "Please enter Warehouse");
        }

    }

    function CheckValidSupplier() {
        $('#txtSupplierType').val('');
        if (txtSupplierCode.val() != '')
            if (ddlSupplierType.val() == 1) {
                ownerType = 2;
                IsCustomerCodeExist(txtSupplierCode, hdnSupplierId, lblSupplierName);
            }
            else if (ddlSupplierType.val() == 2) {
                ownerType = 4;
                IsSupplierCodeExist(txtSupplierCode, hdnSupplierId, lblSupplierName);
            }
            else if (ddlSupplierType.val() == 3) {
                ownerType = 0;
                IsWarehouseNameExist(txtSupplierCode, hdnSupplierId, lblSupplierName);
            }
    }
    function GetGatePassInList() {
        var requestData = { AsnId: AsnId.val(), SupplierType: ddlSupplierType.val(), SupplierId: hdnSupplierId.val(), PurchseOrderNo: txtPONo.val(), InvoiceNo: txtInvoiceNo.val(), AsnNo: txtAsnNo.val(), FromDate: drGatepassFromDateTime.startDate, ToDate: drGatepassFromDateTime.endDate, };
        AjaxRequestWithPostAndJson('@Url.Action("GetGatePassInList")', JSON.stringify(requestData), function (result) {
            if (dtGatePassInDetail == null)
                dtGatePassInDetail = LoadDataTable('dtGatePassInDetail', false, false, false, null, null, [],
                        [
                            { title: 'AsnNo', data: "AsnNo" },
                            { title: 'Asn Date', data: "AsnDate" },
                            { title: 'Supplier Type', data: "SupplierTypeName" },
                            { title: 'Invoice No', data: "InvoiceNo" },
                            { title: 'Invoice Date', data: "InvoiceDate" },
                            { title: 'Purchase Order No', data: "PurchaseOrderNo" },
                            { title: 'Purchase Order Date', data: "PurchaseOrderDate" }
                        ]);

            dtGatePassInDetail.fnClearTable();

            if (result.length == 0) {
                isStepValid = false;
                ShowMessage('No Record Found');
                return false;
            }
            else {
                if (result.length > 0) {
                    $.each(result, function (i, item) {
                        item.AsnNo = '<div class="clearfix">' +
                                '<label class="radio">' +
                                    '<input type="radio" name=\'asn\' value=\'' + item.AsnId + '\' onclick="SelectDocument(this.id);SetOrderDetail()" tabindex="0" id="chkAsnNo' + i + '"/><i></i>' +
                                    //'<label for="lblAsnNo' + i + '">' + item.AsnNo + '</label>' +
                                     '<input type=\'hidden\' id=\'hdnAsnId' + i + '\' value=\'' + item.AsnId + '\' />' +
                                '</label>' +
                            '</div>';
                        item.AsnDate = $.displayDate(item.AsnDate);
                        item.SupplierType = '<input type="text" value=' + item.SupplierType + ' class="form-control textlabel " />';
                        item.InvoiceNo = '<input type="text" value=' + item.InvoiceNo + ' class="form-control textlabel " />';
                        item.InvoiceDate = $.displayDate(item.InvoiceDate);
                        item.PurchaseOrderNo = '<input type="text" value=' + item.PurchaseOrderNo + ' class="form-control textlabel " />';
                        item.PurchaseOrderDate = $.displayDate(item.PurchaseOrderDate);
                    });
                    dtGatePassInDetail.dtAddData(result);
                    asnList = result;


                }
            }
        }
, ErrorFunction, false);
        return false;
    }

    function SelectDocument(rdId) {
        selectedAsnId = $('#' + rdId).val();
        AsnId.val(selectedAsnId);
    }

    function SetOrderDetail() {
        var orderDetails = GetArrayItemByPropery(asnList, 'AsnId', selectedAsnId);
        $('#txtSupplierType').text(orderDetails.SupplierTypeName);
        GetSkuDetails();
    }
    var dtSkuList;
    function GetSkuDetails() {
        var requestData = { AsnId: selectedAsnId };
        AjaxRequestWithPostAndJson('@Url.Action("GetSkuDetails")', JSON.stringify(requestData), function (result) {
            if (dtSkuList == null)
                dtSkuList = LoadDataTable('dtSkuList', false, false, false, null, null, [],
                  [
                      { title: 'SKU Code', data: 'SkuCode' },
                      { title: 'SKU Name', data: 'SkuName' },
                      { title: 'Quantity', data: 'Quantity' },
                      { title: 'UOM', data: 'UOM' },
                      { title: 'Batch Number', data: 'BatchNumber' },
                      { title: 'Manufacturing Date', data: 'ManufacturingDate' },
                      { title: 'Expiry Date', data: 'ExpiryDate' },
                      { title: 'MRP', data: 'MRP' },
                      { title: 'Coupon', data: 'Coupon' }
                  ]);

            dtSkuList.fnClearTable();

            $.each(result, function (i, item) {
                item.SkuCode = '<input type="text" value=' + item.SkuCode + ' class="form-control textlabel " />';
                item.SkuName = '<input type="text" value=' + item.SkuName + ' class="form-control textlabel " />';
                item.Quantity = '<input type="text" value=' + item.Quantity + ' class="form-control textlabel " />';
                item.UOM = '<input type="text" value=' + item.UOM + ' class="form-control textlabel " />';
                item.BatchNumber = '<input type="text" value=' + item.BatchNumber + ' class="form-control textlabel " />';
                item.ManufacturingDate = $.displayDate(item.ManufacturingDate);
                item.ExpiryDate = $.displayDate(item.ExpiryDate);
                item.MRP = '<input type="text" value=' + item.MRP + ' class="form-control textlabel " />';
                item.Coupon = '<input type="text" value=' + item.Coupon + ' class="form-control textlabel " />';
            });
            dtSkuList.dtAddData(result);

        }, ErrorFunction, false);
        return false;
    }

</script>
