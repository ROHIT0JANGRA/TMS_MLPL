@model CodeLock.Models.CustomerContract

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("", "", FormMethod.Post, new { @class = "j-forms" }))
{
<div class="widget-wrap">
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Paybas, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.Paybas, new { @class = "label" })
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerId, new { @class = "label-bold", @id = "lblCustomerId" })
                <div class="clearfix">
                    @Html.HiddenFor(model => model.IsCustomerContract, new { @id = "hdnIsCustomerContract" })
                    @Html.DisplayFor(model => model.CustomerName, new { @class = "label" })
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.ManualContractId, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.ManualContractId, new { @class = "label" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, new { @class = "label-bold" })
                <div class="clearfix">
                    @Model.StartDate.ToDisplayDate()

                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, new { @class = "label-bold" })
                <div class="clearfix">
                    @Model.EndDate.ToDisplayDate()

                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.YesNo(Model.IsActive)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.ContractDate, new { @class = "label-bold" })
                <div class="clearfix">
                    @Model.CustomerContractBasicInfo.ContractDate.ToDisplayDate()

                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.LocationId, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.LocationCode, new { @class = "label" })
                </div>
            </div>
        </div>
        <div class="col-sm-4" id="divImageLink">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.DocumentName, new { @class = "label-bold" })
                <div class="input-wrapper">
                    @{ var fileNamelnkId = "lnkAttachment";}
                    <a href="#" id=@fileNamelnkId onclick="return ViewAttachment(this);">View</a>
                    @Html.HiddenFor(model => model.CustomerContractBasicInfo.DocumentName, new { id = "hdnDocumentName", @Name = "CustomerContractBasicInfo.DocumentName" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.PartyCategory, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.Category, new { @class = "label" })
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.ContractCategory, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.CategoryForContract, new { @class = "label" })
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.AccountPersonName, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.AccountPersonName, new { @class = "label" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.AccountPersonMobileNo, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.AccountPersonMobileNo, new { @class = "label" })
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.AccountPersonEmailId, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.AccountPersonEmailId, new { @class = "label" }).ToString().ToLower()
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.CseName, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.CseName, new { @class = "label" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.CseMobileNo, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.CseMobileNo, new { @class = "label" })
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.CseEmailId, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.CseEmailId, new { @class = "label" }).ToString().ToLower()
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.AccountRepresentativeName, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.AccountRepresentativeName, new { @class = "label" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.Remarks, new { @class = "label-bold" })
                <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.Remarks, new { @class = "label" })
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.EntryBy, new { @class = "label-bold" }) <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.EntryByName, new { @class = "label" })
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.EntryDate, new { @class = "label-bold" })
                <div class="clearfix">
                    @Model.CustomerContractBasicInfo.EntryDate.ToDisplayDateTime()
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.UpdateBy, new { @class = "label-bold" }) <div class="clearfix">
                    @Html.DisplayFor(model => model.CustomerContractBasicInfo.UpdateByName, new { @class = "label" })
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerContractBasicInfo.UpdateDate, new { @class = "label-bold" }) <div class="clearfix">
                    @Model.CustomerContractBasicInfo.UpdateDate.ToDisplayDateTime()
                </div>
            </div>
        </div>
    </div>
</div>
                        }
<script>
    $(document).ready(function () {
        InitCustomerContract();
    });

    function InitCustomerContract() {
        if ($('#hdnIsCustomerContract').val() == "False") {
            $('#lblCustomerId').text("Vendor Name");
            SetPageLoad('Vendor Contract', 'Detail', '', 'Add New', '@Url.Action("Insert", new { customerId = Model.CustomerId, isCustomerContract = Model.IsCustomerContract })', 'Edit', '@Url.Action("Update", new { id = Model.ContractId})', 'Go To List', '@Url.Action("Index", new { customerId = Model.CustomerId, isCustomerContract = Model.IsCustomerContract })');
        }
        else
            SetPageLoad('Customer Contract', 'Detail', '', 'Add New', '@Url.Action("Insert", new { customerId = Model.CustomerId, isCustomerContract = Model.IsCustomerContract })', 'Edit', '@Url.Action("Update", new { id = Model.ContractId })', 'Go To List', '@Url.Action("Index")');
        $('#divImageLink').showHide($('#hdnDocumentName').val() != '');
    }

    function ViewAttachment(obj) {
        var hdnDocumentName = $('#hdnDocumentName');
        var FilePath = "@AzureStorageHelper.CloudStorageString";
        window.open(FilePath + hdnDocumentName.val(), "_blank", "toolbar=yes,scrollbars=yes,resizable=yes,top=100,left=500,width=400,height=300");
        return false;
    }
</script>
