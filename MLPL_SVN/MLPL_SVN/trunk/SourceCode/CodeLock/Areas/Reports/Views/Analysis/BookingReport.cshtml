@using CodeLock.Models
@model CodeLock.Models.BookingReport
@{
    ViewBag.Title = "BookingReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/TableExport/5.2.0/js/tableexport.min.js"></script>


@*=----------------------------------------------------------------------------------------------------------*@
@using (Html.BeginForm("BookingReport", "Analysis", FormMethod.Post, new { @class = "j-forms", id = "reportForm" }))
{
    <div class="widget-wrap">
        <div class="widget-header">
            <h3> Booking Report</h3>
            <button type="submit" id="btnSubmit" class="btn btn-primary primary-btn" tabindex="3">View Report</button>
            <button type="button" id="btnExcel" class="btn btn-default compose-btn" tabindex="3">Export Excel</button>

        </div>

        <div class="row">
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.Label(SessionUtility.DocketNomenClature + " Date", new { @class = "label" })
                    <div class="clearfix">
                        <div id="drDate"></div>
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.Label("Company", new { @class = "CompanyId" })
                    @Html.DropDownList("CompanyId", new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Mahalakshmi Logistic Pvt LTD", Value = "1" },

                        // Add more SelectListItem objects as needed
                    }, "Select a Company", new { @class = "form-control", id = "CompanyId" })
                </div>
            </div>
            <div class="col-sm-4">
                @Html.Label("Customer", new { @id = "lblCustomerId", @class = "label" })
                <div class="select">
                    @Html.DropDownListFor(model => model.CustomerId, new SelectList(ViewBag.CustomerList, "Value", "Name"), "Select Customer", new { @class = "form-control select2", @id = "ddlCustomerId" })
                    <i></i>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4">
                @Html.Partial("LocationHierarchy", new LocationHierarchy() { FieldName = "FromLocationID", FieldCaption = "From Location" })
            </div>
            <div class="col-sm-4">
                @Html.Partial("LocationHierarchy", new LocationHierarchy() { FieldName = "ToLocationId", FieldCaption = "To Location", AllowAll = true })
            </div>
            <div class="col-sm-4">
                <label class="checkbox" style="margin-top:25px;"><label for="chkAll" class="label">All Check</label><input type="checkbox" id="chkAll"><i></i></label>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12" id="dvCheckbox"></div>
        </div>

    </div>
    <div class="report-container table-responsive">
        <table id="dtBookingReport" class="table table-bordered table-striped">
            <thead class="bg-primary">
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
    <!-- Display error message if any -->
    <h4 class="text-danger">@ViewBag.Error</h4>


    <script>


        var columnsToDisplay = ["SRNo", "DocketNo", "DocketDate", "ConsigneeName", "ConsignorName", "TransportMode"
            , "Packages", "ActualWeight", "ChargedWeight", "FromCity", "ToCity"];
$(document).ready(function() {
    // Initialize date range picker
    $('#drDate').daterangepicker();
    InitDateRange('drDate', DateRange.LastWeek);
    $("#CompanyId").val(1);
    // Function to generate custom filename
    function getFilename() {
        var currentDate = new Date();
        var dateString = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();
        return 'BookingReport' + dateString;
    }
    $("#chkAll").on("click", function () {
        if ($("#chkAll").is(':checked')) {
            $('.CheckedFieldNames').prop("checked", true);
        }
        else {
            $('.CheckedFieldNames').prop("checked", false);
        }
        updateColumnsToDisplay();
    })
    GetDocketFieldList();
    updateColumnsToDisplay();
    $('.CheckedFieldNames').change(function () {
        updateColumnsToDisplay();
        // You can use columnsToDisplay array here as needed
    });
    $('#reportForm').submit(function(e) {
        e.preventDefault(); // Prevent default form submission

        // Get date range from the picker
        var fromDate = $('#drDate').data('daterangepicker').startDate.format('DD-MM-YYYY');
        var toDate = $('#drDate').data('daterangepicker').endDate.format('DD-MM-YYYY');

        // Get other form data
        var fromLocationID = $('#ddlFromLocationID').val();
        var toLocationId = $('#ddlToLocationId').val();
        var companyId = $('#CompanyId').val();
        var customerId = $('#ddlCustomerId').val();
        if (companyId == "") {
            companyId = 0;
        }
        if (customerId == "") {
            customerId=0
        }
        var CheckedFieldNames = '';
        // Event listener for checkbox changes

        // Append form data to the request
        // Make AJAX request

        fetchData('fromDate=' + fromDate + '&toDate=' + toDate + '&FromLocationID=' + fromLocationID + '&ToLocationId=' + toLocationId + '&CompanyId=' + companyId + '&CheckedFieldNames=' + CheckedFieldNames + '&customerId=' + customerId);
    });
    $('#btnExcel').click(function () {
        var filename = getFilename(); // Get the custom filename
        // Check if the table has data before exporting
        if ($('#dtBookingReport tbody tr').length > 0) {
            // Export table to Excel format
            $('#dtBookingReport').tableExport({
                type: 'excel',
                escape: 'false',
                fileName: filename // Use fileName instead of filename
            });
        } else {
            alert("List Is Empty");
        }
    });


});
function fetchData(formData) {
    if (columnsToDisplay.length <= 1) {
        alert("Please check atleast one checkbox of column ..!")
    }
    else {

    $.ajax({
    url: '@Url.Action("GetBookingReports", "Analysis")',
    type: 'POST',
    data: formData,
    dataType: 'json',
    success: function(response) {
        console.log(response);

        // Clear previous table data
        $('#dtBookingReport thead').empty();
        $('#dtBookingReport tbody').empty();
        // Check if response data is not empty
        if (response && response.length > 0) {
            var columns = Object.keys(response[0]);

            // Create table headers
            var headerRow = '<tr>';
            columnsToDisplay.forEach(function (column) {
                headerRow += '<th>' + column + '</th>';
            });
            headerRow += '</tr>';
            $('#dtBookingReport thead').append(headerRow);
            response.forEach(function (item) {
                var row = '<tr>';
                columnsToDisplay.forEach(function (column) {
                    if (item[column] == null) {
                        row += '<td></td>';
                    } else {
                        row += '<td>' + item[column] + '</td>';
                    }
                });
                row += '</tr>';
                $('#dtBookingReport tbody').append(row);
            });
        } else {
            // If response data is empty, display a message or handle it accordingly
            $('#dtBookingReport tbody').append('<tr><td colspan="0">No data available</td></tr>');
        }
    },
    error: function(xhr, status, error) {
        console.error('Error:', error);
    }
    });
    }
}
function GetDocketFieldList() {
    var requestData = { FormName: "BookingReport" };
    AjaxRequestWithPostAndJson('@Url.Action("", "Analysis", new { Area = "Reports" })' + '/GetColumnListByReport', JSON.stringify(requestData), function (result) {
        debugger;
        if (result.length == 0)
            $("#dvCheckbox").empty();
        else {
            $("#dvCheckbox").empty();
            var content = '';
            $.each(result, function (index, value) {
                content += "<div class='col-sm-3'> <label class='checkbox'>" +
                    '<label for = "chkDocketField' + index + '" class="label">' + value.FieldCaption + '</label>' +
                    '<input type="checkbox"  id="chkDocketField' + index + '" value="' + value.FieldName + '" class="CheckedFieldNames"/><i></i>' +
                    //'<input type="hidden" id="hdnFieldId' + index + '" value = ' + value.FieldId + ' />' +
                    '</label></div>'
            });
            $("#dvCheckbox").html(content);
           var valueToCheck = ["SRNo", "DocketNo", "DocketDate", "ConsigneeName", "ConsignorName", "TransportMode"
                , "Packages", "ActualWeight", "ChargedWeight", "FromCity", "ToCity"]
            $(".CheckedFieldNames").each(function () {
                var checkboxValue = $(this).val();
                if ($.inArray(checkboxValue, valueToCheck) !== -1) {
                    $(this).prop("checked", true);  // Check the checkbox
                } else {
                    $(this).prop("checked", false);
                }
            });
            $("#dvCheckbox").show();
        }
    }, ErrorFunction, false);
}
        function updateColumnsToDisplay() {
            columnsToDisplay = ["SRNo"];
            $('.CheckedFieldNames:checked').each(function () {
                columnsToDisplay.push($(this).val());

            });
        }
    </script>
}
<style>
    /* Table Header */
    #dtBookingReport thead {
        background-color: #139c9b;
        color: #ffffff;
    }

    /* Table Body */
    #dtBookingReport tbody {
        font-size: 14px;
    }

        /* Odd rows */
        #dtBookingReport tbody tr:nth-child(odd) {
            background-color: #f2f2f2;
        }

        /* Even rows */
        #dtBookingReport tbody tr:nth-child(even) {
            background-color: #ffffff;
        }

        /* Hover effect on rows */
        #dtBookingReport tbody tr:hover {
            background-color: #cceeff;
        }

    /* Table Borders */
    #dtBookingReport {
        border-collapse: collapse;
        border: 1px solid #dddddd;
        width: 100%;
    }

        /* Table Header Cells */
        #dtBookingReport th {
            padding: 8px;
            text-align: left;
            border-bottom: 2px solid #ffffff;
        }

        /* Table Body Cells */
        #dtBookingReport td {
            padding: 8px;
            border-bottom: 1px solid #dddddd;
        }


    /* Search Box */
    div.dataTables_wrapper input[type="search"] {
        width: 300px; /* Adjust the width as needed */
        padding: 5px;
        border-radius: 5px;
        border: 1px solid #ccc;
        box-sizing: border-box;
    }

    /* Pagination */
    .dataTables_paginate {
        text-align: center;
    }

        .dataTables_paginate .paginate_button {
            display: inline-block;
            padding: 5px 10px;
            margin: 0 5px;
            background-color: #f2f2f2;
            border: 1px solid #ccc;
            border-radius: 5px;
            cursor: pointer;
        }

            .dataTables_paginate .paginate_button:hover {
                background-color: #e6e6e6;
            }

            .dataTables_paginate .paginate_button.current {
                background-color: #139c9b;
                color: #ffffff;
                border: 1px solid #139c9b;
            }
</style>