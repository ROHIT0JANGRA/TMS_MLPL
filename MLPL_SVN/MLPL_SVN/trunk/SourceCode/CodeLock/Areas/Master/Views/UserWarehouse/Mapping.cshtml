@model CodeLock.Models.MasterUserWarehouseMapping

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Mapping", "UserWarehouse", FormMethod.Post, new { @class = "j-forms" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.DefaultWarehouseId, new { @id = "hndWarehouse" })
    <div class="widget-wrap">
        <div class="row">
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserId, new { @class = "label" })
                    <div class="select">
                        @Html.DropDownListFor(model => model.UserId, new SelectList(ViewBag.UserList, "Value", "Name"), "Select User", new { @class = "form-control select2", @id = "ddlUser" })
                        <i></i>
                    </div>
                    @Html.ValidationMessageFor(model => model.UserId)

                </div>
            </div>
        </div>
        <div class="row">
            <div class="widget-wrap material-table-widget">
                <table id="dtMapping"></table>
            </div>
        </div>
        <div class="form-footer">
            <button type="submit" class="btn btn-success primary-btn" tabindex="3">Update</button>
        </div>
    </div>
}

<script>
    var dtMapping, ddlUser, hndWarehouse, btnSubmit;
    $(document).ready(function () {
        dtMapping = LoadDataTable('dtMapping', false, false, true, null, null, [],
            [
                { title: '@Html.DisplayNameFor(model => model.WarehouseList)', data: "WarehouseId" },
                { title: '@Html.DisplayNameFor(model => model.DefaultWarehouseId)', data: "DefaultWarehouseId" }
            ]);
        hndWarehouse = $('#hndWarehouse')
        ddlUser = $('#ddlUser');
        ddlUser.change(OnUserChange);
        OnUserChange();
        //$('#dtMapping_wrapper').remove();
        btnSubmit = $('#btnSubmit');
        btnSubmit.click(OnSubmit);
        SetPageLoad('User to Warehouse', 'Mapping', ddlUser.attr('id'), 'Go To List', '@Url.Action("Index")');
    });


    function SetRadio(obj) {
        $('input[type=radio]:checked').not(obj).prop('checked', false);
        $(obj).val(true);
        //return false;
    }


    function OnSubmit() {
        var hndWarehouse = $('#hndWarehouse');
        $('#dtMapping tr:not(:first)').each(function () {
            var tr = $(this);
            var rdbWarehouse = tr.find('[id*="DefaultWarehouseId"]');
            var hndWarehouseId = tr.find('[id*="hndWarehouseId"]');
            if (rdbWarehouse.is(":checked")) {
                hndWarehouse.val(hndWarehouseId.val());
                return false;
            }
        });
    }

    function OnUserChange() {
        if (ddlUser.val() != "") {
            var requestData = { userId: ddlUser.val() };
            AjaxRequestWithPostAndJson('@Url.Action("GetMappingByUserId")', JSON.stringify(requestData), OnUserChangeSuccess, ErrorFunction, false);
        }
    }

    function OnUserChangeSuccess(responseData) {
        dtMapping.fnClearTable();
        if (responseData.length > 0) {
            $.each(responseData, function (i, item) {
                item.WarehouseId =
                     "<input type='hidden' name='WarehouseList[" + i + "].WarehouseId' value='" + item.WarehouseId + "' id='hndWarehouseId[" + i + "]' />" +
                     "<label class='label'>" + item.WarehouseName + "</label>";
                item.DefaultWarehouseId =
                    "<label class='radio'>" +
                      "<input type='radio' name='WarehouseList[" + i + "].IsActive' id='rdIsActive" + i + "' value='" + item.IsActive + "'" + (item.IsActive ? "checked" : "") + " onclick='SetRadio(this)'/>" +
                      "<i></i>" +
                      "<label  for='WarehouseList[" + i + "].IsActive'></label>" +
                "</label>";
            });
            dtMapping.fnAddData(responseData);

        }
    }

    function SetCheck(obj) {
        obj.value = obj.checked;
    }
</script>