@model CodeLock.Models.MasterIssueClose
@using CodeLock.Models
@using Secure_Coding.MvcSecurityExtensions;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Close", "Issue", FormMethod.Post, new { @class = "j-forms", @id = "j-forms", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.AntiModelInjectionFor(m => m.IssueId)
    @Html.HiddenFor(m => m.IssueId, new { @id = "hdnIssueId" })
    <div class="widget-wrap">
        <div class="row">
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ResolvedDocumentAttachment, new { @class = "label" })
                    <div class="input prepend-big-btn">
                        <label class="icon-right" for="prepend-big-btn">
                            <i class="fa fa-download"></i>
                        </label>
                        <div class="file-button">
                            Browse
                            <input class="form-control" id="fuResolvedDocumentAttachment" type="file" name="ResolvedDocumentAttachment" onchange="document.getElementById('prepend-big-btn').value = this.value;">
                        </div>
                        <input class="form-control" type="text" id="prepend-big-btn" readonly="" placeholder="no file selected">
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Comment, new { @class = "label" })
                    <div class="input">
                        @Html.TextBoxFor(model => model.Comment, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Comment)
                </div>
            </div>
            <div class="col-sm-4">
                @Html.LabelFor(model => model.ResolvedById, new { @class = "label" })
                <div class="select">
                    @Html.DropDownListFor(model => model.ResolvedById, new List<SelectListItem> {
                        new SelectListItem() {Text = "Select",Value=""},
                        new SelectListItem() {Text = "Divya", Value="1"},
                        new SelectListItem() {Text = "Liza", Value="2"},
                        new SelectListItem() {Text = "Trushar", Value="3"},
                        new SelectListItem() {Text = "Ruchi", Value="4"},}, new { @class = "form-control", @id = "ddlResolvedById" })
                    <i></i>
                </div>
                @Html.ValidationMessageFor(model => model.ResolvedById)
            </div>
        </div>
        <div class="form-footer">
            <button type="submit" id="btnSubmit" class="btn btn-success primary-btn" tabindex="0">Submit</button>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        SetPageLoad('Issue', 'Close', '', 'GoTo List', '@Url.Action("Index")');
    });
</script>