//  
// Type: CodeLock.Areas.WMS.Repository.OrderRepository
//  
//  
//  

using CodeLock.Helper;
using CodeLock.Models;
using CodeLock.Repository;
using Dapper;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

namespace CodeLock.Areas.WMS.Repository
{
  public class OrderRepository : BaseRepository, IOrderRepository, IDisposable
  {
    public Response Insert(Order objOrder)
    {
      DynamicParameters dynamicParameters = new DynamicParameters();
      dynamicParameters.Add("@XmlOrder", (object) XmlUtility.XmlSerializeToString((object) objOrder), new DbType?(DbType.Xml), new ParameterDirection?(), new int?(), new byte?(), new byte?());
      return DataBaseFactory.QuerySP<Response>("Usp_Order_Insert", (object) dynamicParameters, "Order  - Insert").FirstOrDefault<Response>();
    }

    public IEnumerable<OrderRegister> GetRegisterOrderDetail(
      string orderNo,
      DateTime fromDate,
      DateTime toDate,
      DateTime finStartDate,
      DateTime finEndDate)
    {
      DynamicParameters dynamicParameters = new DynamicParameters();
      dynamicParameters.Add("@OrderNo", (object) orderNo, new DbType?(DbType.String), new ParameterDirection?(), new int?(), new byte?(), new byte?());
      dynamicParameters.Add("@FromDate", (object) fromDate, new DbType?(DbType.DateTime), new ParameterDirection?(), new int?(), new byte?(), new byte?());
      dynamicParameters.Add("@ToDate", (object) toDate, new DbType?(DbType.DateTime), new ParameterDirection?(), new int?(), new byte?(), new byte?());
      dynamicParameters.Add("@FinStartDate", (object) finStartDate, new DbType?(DbType.Date), new ParameterDirection?(), new int?(), new byte?(), new byte?());
      dynamicParameters.Add("@FinEndDate", (object) finEndDate, new DbType?(DbType.Date), new ParameterDirection?(), new int?(), new byte?(), new byte?());
      return (IEnumerable<OrderRegister>) DataBaseFactory.QuerySP<OrderRegister>("Usp_Order_GetRegisterOrderDetail", (object) dynamicParameters, "Order - GetRegisterOrderDetail").ToList<OrderRegister>();
    }
  }
}
